service:
  - key: course_training_project_info
    http: true
    module: empty
    params:
      course_id:
        check:
          template: "{{must .course_id}}"
          err_msg: "课程id不能为空"
      training_project_id:
        check:
          template: "{{must .training_project_id}}"
          err_msg: "培训项目id不能为空"
    handler_params:
      - key: service2field
        service:
          service: sport.course_query
          course_id: "[course_id]"
          to_obj: true
        save_field: course
      - key: service2field
        service:
          service: sport.training_project_query
          training_project_id: "[training_project_id]"
          to_obj: true
        save_field: training_project
      - key: params2result
        fields:
          - from: "[course]"
            to: course
          - from: "[training_project]"
            to: training_project

  - key: course_save
    http: true
    module: model_save
    table: course
    params:
      course_id:
        template: "{{uuid}}"
      training_type:
        check:
          template: "{{must .training_type}}"
          err_msg: "训练类型不能为空"
      teacher_id:
        check:
          template: "{{must .teacher_id}}"
          err_msg: "老师不能为空"
      start_time:
        check:
          template: "{{must .start_time}}"
          err_msg: "开始时间不能为空"
      create_time:
        template: "{{current_date_time}}"
      create_user:
        template: "{{.session_user_id}}"
      is_delete:
        default: "0"
      course_stage:
        default: "not_start"
      random_grade:
        default: "0"
    result_handler:
      - key: service2field
        enable: "{{eq .random_grade `1`}}"
        name: 生成分析大屏成绩
        service:
          service: sport.gen_course_grade
          target_course_id: "[course_id]"
          dashboard_type: "analyst"
          with_all: true
          training_type: "[training_type]"
          body_part: "[body_part]"
      - key: service2field
        enable: "{{eq .random_grade `1`}}"
        name: 生成训练成绩
        service:
          service: sport.gen_course_grade
          target_course_id: "[course_id]"
          dashboard_type: "training"
          with_all: true
          training_type: "[training_type]"
          body_part: "[body_part]"
          with_training_project: true

  - key: course_history
    module: empty
    http: true
    params:
      teacher_id:
        check:
          template: "{{must .teacher_id}}"
          err_msg: "老师不能为空"
    handler_params:
      - key: service2field
        service:
          service: sport.course_query
          teacher_id: "[teacher_id]"
          is_start: true
        save_field: course_list
      - key: service2field
        service:
          service: sport.grade_history
          teacher_id: "[teacher_id]"
        save_field: grade_history
      - key: combine_array
        foreach: "[course_list]"
        field: "[course_id]"
        right: "[grade_history]"
        right_field: "[course_id]"
        children: "children"
      - key: param2result
        field: course_list
  - key: course_student_history
    module: empty
    http: true
    params:
      student_id:
        check:
          template: "{{must .student_id}}"
          err_msg: "学生不能为空"
    handler_params:
      - key: service2field
        service:
          service: sport.grade_history
          student_id: "[student_id]"
        save_field: course_list
      - key: service2field
        service:
          service: sport.course_attendance_query
          student_id: "[student_id]"
        save_field: attendance_list
      - key: service2field
        service:
          service: sport.video_list
          username: "[student_id]"
        save_field: video_list
      - key: combine_array
        foreach: "[course_list]"
        field: "[course_id]"
        right: "[attendance_list]"
        right_field: "[course_id]"
        children: "attendance_list"
      - key: combine_array
        foreach: "[course_list]"
        field: "[course_id]"
        right: "[video_list]"
        right_field: "[course_id]"
        children: "video_list"
      - key: param2result
        field: course_list
  - key: course_query
    http: true
    module: sql
    params:
      search:
        template: "{{ if .search }}%{{.search}}%{{ end }}"
      page:
        type: int
        default: 1
      size:
        default: 20
        type: int
      day:
        default: ""
      start_time:
        default: ""
      end_time:
        default: ""
      start:
        template: " ({{.page}}-1) * {{.size}}"
        exec: true
        type: int
      pagination:
        default: true
      to_obj:
        default: false
    data_file: course_query.sql
    count_file: course_count.sql
    pagination: pagination
    result_handler:
      - key: arr2obj
        enable: "[to_obj]"

  - key: course_update
    http: true
    module: model_update
    table: course
    params:
      course_id:
        check:
          template: "{{must .course_id}}"
          err_msg: "项目不能为空"
    filter:
      course_id: "[course_id]"

  - key: course_delete
    http: true
    module: model_update
    table: course
    params:
      course_id_list:
        check:
          template: "{{must .course_id_list}}"
          err_msg: "课程不能为空"
      is_delete:
        default: "1"
    filter:
      course_id__in: "[course_id_list]"

  - key: course_attendance_count
    http: true
    module: sql
    params:
      student_id:
        default: ""
      teacher_id:
        default: ""
      training_type:
        default: ""
    data_file: course_attendance_count.sql
    result_handler:
      - key: arr2obj

